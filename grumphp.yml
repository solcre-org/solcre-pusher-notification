parameters:
  git_dir: .
  bin_dir: vendor/bin
  tasks:
    phpcs:
      standard: PSR2
      exclude: ['Generic.Files.LineLength']
    phpmd:
      whitelist_patterns: []
      ruleset: ['cleancode', 'codesize', 'controversial', 'design']
      triggered_by: ['php']
      exclude: ['/test']
    phpstan:
      autoload_file: ~
      configuration: ~
      level: 7
      force_patterns: []
      ignore_patterns: ['test']
      triggered_by: ['php']
      memory_limit: '-1'
    git_blacklist:
      keywords:
        - "die("
        - "var_dump("
        - "exit;"
    phpcpd:
      directory: '.'
      exclude: ['vendor', 'test']
      names_exclude: []
      regexps_exclude: []
      fuzzy: false
      min_lines: 5
      min_tokens: 70
      triggered_by: ['php']
    composer_normalize:
      indent_size: ~
      indent_style: ~
      no_update_lock: true
      verbose: false
    file_size:
      max_size: 10M
      ignore_patterns: []
    git_commit_message:
      allow_empty_message: false
      enforce_capitalized_subject: false
      enforce_no_subject_punctuations: false
      enforce_no_subject_trailing_period: true
      enforce_single_lined_subject: true
      type_scope_conventions:
        - types:
            - build
            - ci
            - chore
            - docs
            - feat
            - fix
            - perf
            - refactor
            - revert
            - style
            - test
        - scopes:
            - frontend
            - backend
      max_body_width: 72
      max_subject_width: 60
      case_insensitive: true
      multiline: true
      additional_modifiers: ''
    phpmnd:
      directory: .
      whitelist_patterns: []
      exclude: []
      exclude_name: []
      exclude_path: ['test']
      extensions: []
      hint: false
      ignore_numbers: []
      ignore_strings: []
      strings: false
      triggered_by: ['php']
    phpversion:
      project: '7.3'
#    phpunit:
#      config_file: ~
#      testsuite: ~
#      group: []
#      always_execute: true
    securitychecker:
      lockfile: ./composer.lock
      format: ~
      end_point: ~
      timeout: ~
      run_always: false
    phpcsfixer:
      config_file: ~
      config: ~
      fixers: []
      level: ~
      verbose: true